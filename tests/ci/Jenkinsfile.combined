matchedNode = []
for (label in pullRequest.labels) {
   listOfLabelNodeNames = jenkins.model.Jenkins.instance.nodes.collect {
   node -> node.getLabelString().contains(label) ? node.name : null

   if ((label.matches(node.getLabelString()+"-(.*)"))) {
     matchedNode += node.getLabelString()
   }
 }
}

modifiedLabels = matchedNode.collect{"'" + it + "'"} 

def generateStage(nodeLabel) {
    return {
        stage("Runs on ${nodeLabel}") {
            node(nodeLabel) {
               script {
                    echo "Running on ${nodeLabel}"
                    echo '************************'
                    echo '*****BUILDING JOBS******'
                    echo '************************'
                }
            }
        }
    }
}
def parallelStagesMap = modifiedLabels.collectEntries {
    ["${it}" : generateStage(it)]
}

pipeline {
    agent none
    stages {
        stage('non-parallel stage') {
            steps {
              script {
                //echo 'This stage will be executed first.'
                for (label in pullRequest.labels) {
                   if ((label.matches("(.*)-BL"))) {
                     env.CREATE_BASELINES='true'
                   }
                   else {
                      env.CREATE_BASELINES='false'
                   }
                }
                echo "The value of create baselines is $CREATE_BASELINES" 
             }
           }
        }
        stage('parallel stage') {
            steps {
                script {
                    parallel parallelStagesMap
                }
            }
        }       
    }
}
